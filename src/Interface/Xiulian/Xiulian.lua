--修炼系统
--Author：逍遥子
--QQ:857904341
---===================================================
local SELFEQUIP_TAB_TEXT = {}
local XIULIAN_BOOKS = {}
local XIULIAN_MIJI = {}
local XIULIAN_MIJI_TEXT = {}

local XIULIAN_BOOK_SELECT = 1;
local XIULIAN_MIJI_SELECT = -1;

local MIJI_CAN_SELECT = false;

-- 界面的默认相对位置
local g_Xiulian_Frame_UnifiedXPosition;
local g_Xiulian_Frame_UnifiedYPosition;

local strZhiyeTip = {}
strZhiyeTip[1] = "#{XLZY_120330_02}" --少林
strZhiyeTip[2] = "#{XLZY_120330_04}" --明教
strZhiyeTip[3] = "#{XLZY_120330_03}" --丐帮
strZhiyeTip[4] = "#{XLZY_120330_05}" --武当
strZhiyeTip[5] = "#{XLZY_120330_08}" --峨嵋
strZhiyeTip[6] = "#{XLZY_120330_09}" --星宿
strZhiyeTip[7] = "#{XLZY_120330_06}" --天龙
strZhiyeTip[8] = "#{XLZY_120330_10}" --天山
strZhiyeTip[9] = "#{XLZY_120330_07}" --逍遥
strZhiyeTip[10] = " " --无门派
strZhiyeTip[11] = "#{XLZY_120330_11}" --慕容
strZhiyeTip[12] = "#{XMPTM_130123_08}" --唐门

local g_Xiulian_Book = {49000001,49000002,49000003}
local g_Xiulian_MijiBook = {49000004,49000005,49000006,49000007,49000008,49000009,49000010,49000011,49000012,49000013,49000014,49000015,49000016,49000017,49000018}
local XiuLianDetial = {
	[0] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	[1] = {1140,68,1,1140,68,1,1738,104,1,105,6,1,413,24,1,948,56,1,948,56,1,451,27,1,218,13,1,448,26,1,463,27,1,1867,112,933,56,2800,168,1400,84},
[2] = {14168,850,2,14168,850,2,21592,1295,2,1299,77,2,5135,308,2,11785,707,2,11785,707,2,5605,336,2,2712,162,2,5567,334,2,5757,345,2,23197,1391,11598,695,34795,2087,17398,1043},
[3] = {40634,2437,3,40634,2437,3,61926,3715,3,3726,223,3,14727,883,3,33798,2027,3,33798,2027,3,16074,964,3,7779,466,3,15966,957,3,16512,990,3,66528,3991,33264,1995,99792,5987,49896,2993},
[4] = {76697,4601,4,76697,4601,4,116887,7013,4,7033,421,4,27798,1667,4,63794,3827,4,63794,3827,4,30340,1820,4,14682,880,4,30136,1808,4,31167,1869,4,125572,7534,62786,3767,188359,11301,94179,5650},
[5] = {120862,7251,5,120862,7251,5,184196,11051,5,11083,664,5,43806,2628,5,100530,6031,5,100530,6031,5,47811,2868,5,23137,1388,5,47490,2849,5,49114,2946,5,197883,11872,98941,5936,296824,17809,148412,8904},
[6] = {172232,10333,6,172232,10333,6,262485,15748,6,15794,947,6,62425,3745,6,143258,8595,6,143258,8595,6,68133,4087,6,32971,1978,6,67675,4060,6,69989,4199,6,281989,16919,140995,8459,422984,25378,211492,12689},
[7] = {230184,13811,7,230184,13811,7,350805,21048,7,21109,1266,7,83429,5005,7,191462,11487,7,191462,11487,7,91058,5463,7,44065,2643,7,90446,5426,7,93538,5612,7,376873,22612,188436,11306,565309,33918,282654,16959},
[8] = {294253,17655,8,294253,17655,8,448446,26906,8,26984,1619,8,106651,6399,8,244752,14685,8,244752,14685,8,116402,6984,8,56330,3379,8,115621,6937,8,119573,7174,8,481769,28906,240885,14453,722654,43359,361327,21679},
[9] = {364069,21844,9,364069,21844,9,554848,33290,9,33386,2003,9,131955,7917,9,302824,18169,9,302824,18169,9,144021,8641,9,69696,4181,9,143054,8583,9,147944,8876,9,596077,35764,298038,17882,894115,53646,447058,26823},
[10] = {439333,26359,10,439333,26359,10,669552,40172,10,40288,2417,10,159234,9554,10,365426,21925,10,365426,21925,10,173794,10427,10,84104,5046,10,172627,10357,10,178528,10711,10,719304,43158,359652,21579,1078957,64737,539478,32368},
[11] = {426730,25603,11,426730,25603,11,837572,50254,11,47667,2859,11,233794,14027,11,349074,20944,11,349074,20944,11,294031,17641,11,114449,6866,11,242736,14564,11,310602,18636,11,851040,51062,425520,25531,1276560,76593,638280,38296},
[12] = {496875,29812,12,496875,29812,12,975249,58514,12,55502,3330,12,272224,16333,12,406454,24387,12,406454,24387,12,342363,20541,12,133262,7995,12,282636,16958,12,361658,21699,12,990931,59455,495465,29727,1486396,89183,743198,44591},
[13] = {570956,34257,13,570956,34257,13,1120653,67239,13,63777,3826,13,312811,18768,13,467053,28023,13,467053,28023,13,393407,23604,13,153131,9187,13,324776,19486,13,415579,24934,13,1138672,68320,569336,34160,1708008,102480,854004,51240},
[14] = {648838,38930,14,648838,38930,14,1273517,76410,14,72477,4348,14,355480,21328,14,530763,31845,14,530763,31845,14,447070,26824,14,174019,10441,14,369077,22144,14,472267,28335,14,1293995,77639,646997,38819,1940992,116459,970496,58229},
[15] = {730402,43824,15,730402,43824,15,1433608,86016,15,81587,4895,15,400167,24009,15,597483,35848,15,597483,35848,15,503270,30196,15,195894,11753,15,415473,24928,15,531634,31898,15,1456659,87399,728330,43699,2184989,131099,1092494,65549},
[16] = {815539,48932,16,815539,48932,16,1600712,96042,16,91097,5465,16,446811,26808,16,667127,40027,16,667127,40027,16,561932,33715,16,218728,13123,16,463901,27834,16,593602,35616,16,1626451,97586,813225,48793,2439676,146380,1219838,73190},
[17] = {904153,54249,17,904153,54249,17,1774640,106478,17,100996,6059,17,495360,29721,17,739615,44376,17,739615,44376,17,622990,37379,17,242494,14549,17,514307,30858,17,658101,39486,17,1803175,108190,901588,54095,2704763,162285,1352382,81142},
[18] = {996154,59769,18,996154,59769,18,1955217,117312,18,111273,6676,18,545765,32745,18,814874,48892,18,814874,48892,18,686382,41182,18,267169,16030,18,566640,33998,18,725066,43503,18,1986656,119199,993328,59599,2979984,178798,1489992,89399},
[19] = {1091462,65487,19,1091462,65487,19,2142284,128536,19,121919,7315,19,597982,35878,19,892838,53570,19,892838,53570,19,752052,45123,19,292731,17563,19,620854,37251,19,794437,47666,19,2176731,130603,1088366,65301,3265097,195905,1632548,97952},
[20] = {1190001,71400,20,1190001,71400,20,2335694,140141,20,132926,7975,20,651969,39118,20,973445,58406,20,973445,58406,20,819949,49196,20,319159,19149,20,676906,40614,20,866161,51969,20,2373251,142394,1186626,71197,3559877,213592,1779938,106796},
[21] = {1435989,86159,21,1435989,86159,21,2109324,126559,21,714559,42873,21,425987,25559,21,1169637,70178,21,1169637,70178,21,405976,24358,21,864202,51852,21,511968,30718,21,468949,28136,21,2576078,154564,1288039,77282,3864117,231846,1932059,115923},
[22] = {1552496,93149,22,1552496,93149,22,2280461,136827,22,772534,46351,22,460549,27632,22,1264534,75871,22,1264534,75871,22,438915,26334,22,934318,56058,22,553506,33210,22,506997,30419,22,2785084,167104,1392542,83552,4177626,250657,2088813,125328},
[23] = {1672380,100342,23,1672380,100342,23,2456559,147393,23,832189,49931,23,496113,29766,23,1362182,81730,23,1362182,81730,23,472808,28368,23,1006466,60387,23,596248,35774,23,546147,32768,23,3000149,180008,1500074,90004,4500223,270013,2250112,135006},
[24] = {1795580,107734,24,1795580,107734,24,2637526,158251,24,893494,53609,24,532660,31959,24,1462530,87751,24,1462530,87751,24,507638,30458,24,1080610,64836,24,640172,38410,24,586380,35182,24,3221161,193269,1610581,96634,4831742,289904,2415871,144952},
[25] = {1922036,115322,25,1922036,115322,25,2823278,169396,25,956420,57385,25,570173,34210,25,1565531,93931,25,1565531,93931,25,543389,32603,25,1156713,69402,25,685257,41115,25,627677,37660,25,3448017,206880,1724008,103440,5172025,310321,2586013,155160},
[26] = {2051695,123101,26,2051695,123101,26,3013734,180823,26,1020939,61256,26,608637,36518,26,1671140,100268,26,1671140,100268,26,580046,34802,26,1234744,74084,26,731484,43888,26,670019,40201,26,3680616,220836,1840308,110418,5520924,331255,2760462,165627},
[27] = {2184503,131070,27,2184503,131070,27,3208816,192528,27,1087026,65221,27,648034,38882,27,1779314,106758,27,1779314,106758,27,617593,37055,27,1314670,78880,27,778833,46729,27,713390,42803,27,3918867,235132,1959433,117566,5878300,352698,2939150,176349},
[28] = {2320413,139224,28,2320413,139224,28,3408453,204507,28,1154655,69279,28,688352,41301,28,1890015,113400,28,1890015,113400,28,656017,39360,28,1396463,83787,28,827289,49637,28,757774,45466,28,4162680,249760,2081340,124880,6244020,374641,3122010,187320},
[29] = {2459377,147562,29,2459377,147562,29,3612578,216754,29,1223805,73428,29,729576,43774,29,2003203,120192,29,2003203,120192,29,695304,41718,29,1480094,88805,29,876833,52609,29,803155,48189,29,4411973,264718,2205987,132359,6617960,397077,3308980,198538},
[30] = {2601351,156081,30,2601351,156081,30,3821124,229267,30,1294452,77667,30,771693,46301,30,2118844,127130,30,2118844,127130,30,735442,44126,30,1565536,93932,30,927451,55647,30,849520,50971,30,4666667,280000,2333333,140000,7000000,420000,3500000,210000},
[31] = {2197368,131842,31.25,2197368,131842,31.25,4052632,243157,31.25,1907895,114473,31.25,815789,48947,31.25,1660181,99610,31.25,1660181,99610,31.25,890307,53418,31.25,2146733,128803,31.25,1049566,62973,31.25,720641,43238,31.25,4933333,296000,2466667,148000,7400000,444000,3700000,222000},
[32] = {2316145,138968,32.5,2316145,138968,32.5,4271693,256301,32.5,2011024,120661,32.5,859886,51593,32.5,1749921,104995,32.5,1749921,104995,32.5,938432,56305,32.5,2262773,135766,32.5,1106299,66377,32.5,759595,45575,32.5,5200000,312000,2600000,156000,7800000,468000,3900000,234000},
[33] = {2434922,146095,33.75,2434922,146095,33.75,4490754,269445,33.75,2114154,126849,33.75,903983,54238,33.75,1839660,110379,33.75,1839660,110379,33.75,986557,59193,33.75,2378812,142728,33.75,1163032,69781,33.75,798549,47912,33.75,5466667,328000,2733333,164000,8200000,492000,4100000,246000},
[34] = {2553698,153221,35,2553698,153221,35,4709815,282588,35,2217283,133036,35,948080,56884,35,1929400,115764,35,1929400,115764,35,1034682,62080,35,2494852,149691,35,1219765,73185,35,837502,50250,35,5733333,344000,2866667,172000,8600000,516000,4300000,258000},
[35] = {2672475,160348,36.25,2672475,160348,36.25,4928876,295732,36.25,2320413,139224,36.25,992176,59530,36.25,2019140,121148,36.25,2019140,121148,36.25,1082806,64968,36.25,2610891,156653,36.25,1276499,76589,36.25,876456,52587,36.25,6000000,360000,3000000,180000,9000000,540000,4500000,270000},
[36] = {2791252,167475,37.5,2791252,167475,37.5,5147937,308876,37.5,2423542,145412,37.5,1036273,62176,37.5,2108879,126532,37.5,2108879,126532,37.5,1130931,67855,37.5,2726931,163615,37.5,1333232,79993,37.5,915409,54924,37.5,6266667,376000,3133333,188000,9400000,564000,4700000,282000},
[37] = {2910028,174601,38.75,2910028,174601,38.75,5366999,322019,38.75,2526671,151600,38.75,1080370,64822,38.75,2198619,131917,38.75,2198619,131917,38.75,1179056,70743,38.75,2842971,170578,38.75,1389965,83397,38.75,954363,57261,38.75,6533333,392000,3266667,196000,9800000,588000,4900000,294000},
[38] = {3028805,181728,40,3028805,181728,40,5586060,335163,40,2629801,157788,40,1124467,67467,40,2288358,137301,40,2288358,137301,40,1227181,73630,40,2959010,177540,40,1446698,86801,40,993317,59598,40,6800000,408000,3400000,204000,10200000,612000,5100000,306000},
[39] = {3147582,188854,41.25,3147582,188854,41.25,5805121,348307,41.25,2732930,163975,41.25,1168563,70113,41.25,2378098,142685,41.25,2378098,142685,41.25,1275305,76518,41.25,3075050,184502,41.25,1503432,90205,41.25,1032270,61936,41.25,7066667,424000,3533333,212000,10600000,636000,5300000,318000},
[40] = {3266358,195981,42.5,3266358,195981,42.5,6024182,361450,42.5,2836060,170163,42.5,1212660,72759,42.5,2467837,148070,42.5,2467837,148070,42.5,1323430,79405,42.5,3191090,191465,42.5,1560165,93609,42.5,1071224,64273,42.5,7333333,440000,3666667,220000,11000000,660000,5500000,330000},
[41] = {3810811,228648,43.75,3810811,228648,43.75,7074324,424459,43.75,2108108,126486,43.75,831081,49864,43.75,2764146,165848,43.75,2764146,165848,43.75,1419464,85167,43.75,2978491,178709,43.75,1125256,67515,43.75,1444243,86654,43.75,7600000,456000,3800000,228000,11400000,684000,5700000,342000},
[42] = {3944523,236671,45,3944523,236671,45,7322546,439352,45,2182077,130924,45,860242,51614,45,2861134,171668,45,2861134,171668,45,1469269,88156,45,3083000,184979,45,1164739,69884,45,1494918,89695,45,7866667,472000,3933333,236000,11800000,708000,5900000,354000},
[43] = {4078236,244694,46.25,4078236,244694,46.25,7570768,454246,46.25,2256046,135362,46.25,889403,53364,46.25,2958121,177487,46.25,2958121,177487,46.25,1519075,91144,46.25,3187508,191250,46.25,1204221,72253,46.25,1545593,92735,46.25,8133333,488000,4066667,244000,12200000,732000,6100000,366000},
[44] = {4211949,252716,47.5,4211949,252716,47.5,7818990,469139,47.5,2330014,139800,47.5,918563,55113,47.5,3055109,183306,47.5,3055109,183306,47.5,1568881,94132,47.5,3292016,197520,47.5,1243704,74622,47.5,1596268,95776,47.5,8400000,504000,4200000,252000,12600000,756000,6300000,378000},
[45] = {4345661,260739,48.75,4345661,260739,48.75,8067212,484032,48.75,2403983,144238,48.75,947724,56863,48.75,3152096,189125,48.75,3152096,189125,48.75,1618687,97121,48.75,3396525,203791,48.75,1283187,76991,48.75,1646944,98816,48.75,8666667,520000,4333333,260000,13000000,780000,6500000,390000},
[46] = {4479374,268762,50,4479374,268762,50,8315434,498926,50,2477952,148677,50,976885,58613,50,3249084,194945,50,3249084,194945,50,1668492,100109,50,3501033,210062,50,1322669,79360,50,1697619,101857,50,8933333,536000,4466667,268000,13400000,804000,6700000,402000},
[47] = {4613087,276785,51.25,4613087,276785,51.25,8563656,513819,51.25,2551920,153115,51.25,1006046,60362,51.25,3346072,200764,51.25,3346072,200764,51.25,1718298,103097,51.25,3605542,216332,51.25,1362152,81729,51.25,1748294,104897,51.25,9200000,552000,4600000,276000,13800000,828000,6900000,414000},
[48] = {4746799,284807,52.5,4746799,284807,52.5,8811878,528712,52.5,2625889,157553,52.5,1035206,62112,52.5,3443059,206583,52.5,3443059,206583,52.5,1768104,106086,52.5,3710050,222603,52.5,1401635,84098,52.5,1798969,107938,52.5,9466667,568000,4733333,284000,14200000,852000,7100000,426000},
[49] = {4880512,292830,53.75,4880512,292830,53.75,9060100,543605,53.75,2699858,161991,53.75,1064367,63862,53.75,3540047,212402,53.75,3540047,212402,53.75,1817909,109074,53.75,3814559,228873,53.75,1441117,86467,53.75,1849644,110978,53.75,9733333,584000,4866667,292000,14600000,876000,7300000,438000},
[50] = {5014225,300853,55,5014225,300853,55,9308321,558499,55,2773826,166429,55,1093528,65611,55,3637034,218222,55,3637034,218222,55,1867715,112062,55,3919067,235144,55,1480600,88835,55,1900320,114019,55,10000000,600000,5000000,300000,15000000,900000,7500000,450000},
[51] = {2875178,172510,56.25,2875178,172510,56.25,8406472,504388,56.25,2245377,134722,56.25,2847795,170867,56.25,2504823,150289,56.25,2504823,150289,56.25,2311826,138709,56.25,2560318,153619,56.25,3304759,198285,56.25,2835324,170119,56.25,10266667,616000,5133333,308000,15400000,924000,7700000,462000},
[52] = {2949858,176991,57.5,2949858,176991,57.5,8624822,517489,57.5,2303698,138221,57.5,2921764,175305,57.5,2569883,154192,57.5,2569883,154192,57.5,2371874,142312,57.5,2626820,157609,57.5,3390597,203435,57.5,2908969,174538,57.5,10533333,632000,5266667,316000,15800000,948000,7900000,474000},
[53] = {3024538,181472,58.75,3024538,181472,58.75,8843172,530590,58.75,2362020,141721,58.75,2995733,179743,58.75,2634943,158096,58.75,2634943,158096,58.75,2431921,145915,58.75,2693322,161599,58.75,3476435,208586,58.75,2982614,178956,58.75,10800000,648000,5400000,324000,16200000,972000,8100000,486000},
[54] = {3099218,185953,60,3099218,185953,60,9061522,543691,60,2420341,145220,60,3069701,184182,60,2700004,162000,60,2700004,162000,60,2491968,149518,60,2759824,165589,60,3562273,213736,60,3056258,183375,60,11066667,664000,5533333,332000,16600000,996000,8300000,498000},
[55] = {3173898,190433,61.25,3173898,190433,61.25,9279872,556792,61.25,2478663,148719,61.25,3143670,188620,61.25,2765064,165903,61.25,2765064,165903,61.25,2552016,153120,61.25,2826325,169579,61.25,3648111,218886,61.25,3129903,187794,61.25,11333333,680000,5666667,340000,17000000,1020000,8500000,510000},
[56] = {3248578,194914,62.5,3248578,194914,62.5,9498222,569893,62.5,2536984,152219,62.5,3217639,193058,62.5,2830124,169807,62.5,2830124,169807,62.5,2612063,156723,62.5,2892827,173569,62.5,3733949,224036,62.5,3203548,192212,62.5,11600000,696000,5800000,348000,17400000,1044000,8700000,522000},
[57] = {3323257,199395,63.75,3323257,199395,63.75,9716572,582994,63.75,2595306,155718,63.75,3291607,197496,63.75,2895185,173711,63.75,2895185,173711,63.75,2672111,160326,63.75,2959329,177559,63.75,3819787,229187,63.75,3277193,196631,63.75,11866667,712000,5933333,356000,17800000,1068000,8900000,534000},
[58] = {3397937,203876,65,3397937,203876,65,9934922,596095,65,2653627,159217,65,3365576,201934,65,2960245,177614,65,2960245,177614,65,2732158,163929,65,3025831,181549,65,3905624,234337,65,3350838,201050,65,12133333,728000,6066667,364000,18200000,1092000,9100000,546000},
[59] = {3472617,208357,66.25,3472617,208357,66.25,10153272,609196,66.25,2711949,162716,66.25,3439545,206372,66.25,3025305,181518,66.25,3025305,181518,66.25,2792206,167532,66.25,3092333,185539,66.25,3991462,239487,66.25,3424482,205468,66.25,12400000,744000,6200000,372000,18600000,1116000,9300000,558000},
[60] = {3547297,212837,67.5,3547297,212837,67.5,10371622,622297,67.5,2770270,166216,67.5,3513514,210810,67.5,3090366,185421,67.5,3090366,185421,67.5,2852253,171135,67.5,3158834,189530,67.5,4077300,244638,67.5,3498127,209887,67.5,12666667,760000,6333333,380000,19000000,1140000,9500000,570000},
[61] = {7248933,289957,69,7248933,289957,69,11465861,458634,69,731863,29274,69,4286629,171465,69,5712184,228487,69,5712184,228487,69,3549352,141974,69,1545448,61817,69,4088532,163541,69,4181908,167276,69,13066667,784000,6533333,392000,19600000,1176000,9800000,588000},
[62] = {7470839,298833,70.5,7470839,298833,70.5,11816856,472674,70.5,754267,30170,70.5,4417852,176714,70.5,5887047,235481,70.5,5887047,235481,70.5,3658006,146320,70.5,1592758,63710,70.5,4213691,168547,70.5,4309926,172397,70.5,13466667,808000,6733333,404000,20200000,1212000,10100000,606000},
[63] = {7692745,307709,72,7692745,307709,72,12167852,486714,72,776671,31066,72,4549075,181963,72,6061910,242476,72,6061910,242476,72,3766659,150666,72,1640067,65602,72,4338850,173553,72,4437943,177517,72,13866667,832000,6933333,416000,20800000,1248000,10400000,624000},
[64] = {7914651,316586,73.5,7914651,316586,73.5,12518848,500753,73.5,799075,31963,73.5,4680299,187211,73.5,6236772,249470,73.5,6236772,249470,73.5,3875313,155012,73.5,1687377,67495,73.5,4464009,178560,73.5,4565961,182638,73.5,14266667,856000,7133333,428000,21400000,1284000,10700000,642000},
[65] = {8136558,325462,75,8136558,325462,75,12869844,514793,75,821479,32859,75,4811522,192460,75,6411635,256465,75,6411635,256465,75,3983967,159358,75,1734686,69387,75,4589168,183566,75,4693979,187759,75,14666667,880000,7333333,440000,22000000,1320000,11000000,660000},
[66] = {8358464,334338,76.5,8358464,334338,76.5,13220839,528833,76.5,843883,33755,76.5,4942745,197709,76.5,6586498,263459,76.5,6586498,263459,76.5,4092620,163704,76.5,1781996,71279,76.5,4714327,188573,76.5,4821996,192879,76.5,15066667,904000,7533333,452000,22600000,1356000,11300000,678000},
[67] = {8580370,343214,78,8580370,343214,78,13571835,542873,78,866287,34651,78,5073969,202958,78,6761361,270454,78,6761361,270454,78,4201274,168050,78,1829306,73172,78,4839486,193579,78,4950014,198000,78,15466667,928000,7733333,464000,23200000,1392000,11600000,696000},
[68] = {8802276,352091,79.5,8802276,352091,79.5,13922831,556913,79.5,888691,35547,79.5,5205192,208207,79.5,6936223,277448,79.5,6936223,277448,79.5,4309928,172397,79.5,1876615,75064,79.5,4964645,198585,79.5,5078032,203121,79.5,15866667,952000,7933333,476000,23800000,1428000,11900000,714000},
[69] = {9024182,360967,81,9024182,360967,81,14273826,570953,81,911095,36443,81,5336415,213456,81,7111086,284443,81,7111086,284443,81,4418581,176743,81,1923925,76956,81,5089805,203592,81,5206049,208241,81,16266667,976000,8133333,488000,24400000,1464000,12200000,732000},
[70] = {9246088,369843,82.5,9246088,369843,82.5,14624822,584992,82.5,933499,37339,82.5,5467639,218705,82.5,7285949,291437,82.5,7285949,291437,82.5,4527235,181089,82.5,1971235,78849,82.5,5214964,208598,82.5,5334067,213362,82.5,16666667,1000000,8333333,500000,25000000,1500000,12500000,750000},
[71] = {9467994,378719,84,9467994,378719,84,14975818,599032,84,955903,38236,84,5598862,223954,84,7460812,298432,84,7460812,298432,84,4635889,185435,84,2018544,80741,84,5340123,213604,84,5462084,218483,84,17066667,1024000,8533333,512000,25600000,1536000,12800000,768000},
[72] = {9689900,387596,85.5,9689900,387596,85.5,15326814,613072,85.5,978307,39132,85.5,5730085,229203,85.5,7635675,305426,85.5,7635675,305426,85.5,4744542,189781,85.5,2065854,82634,85.5,5465282,218611,85.5,5590102,223604,85.5,17466667,1048000,8733333,524000,26200000,1572000,13100000,786000},
[73] = {9911807,396472,87,9911807,396472,87,15677809,627112,87,1000711,40028,87,5861309,234452,87,7810537,312421,87,7810537,312421,87,4853196,194127,87,2113163,84526,87,5590441,223617,87,5718120,228724,87,17866667,1072000,8933333,536000,26800000,1608000,13400000,804000},
[74] = {10133713,405348,88.5,10133713,405348,88.5,16028805,641152,88.5,1023115,40924,88.5,5992532,239701,88.5,7985400,319416,88.5,7985400,319416,88.5,4961850,198473,88.5,2160473,86418,88.5,5715600,228624,88.5,5846137,233845,88.5,18266667,1096000,9133333,548000,27400000,1644000,13700000,822000},
[75] = {10355619,414224,90,10355619,414224,90,16379801,655192,90,1045519,41820,90,6123755,244950,90,8160263,326410,90,8160263,326410,90,5070503,202820,90,2207783,88311,90,5840759,233630,90,5974155,238966,90,18666667,1120000,9333333,560000,28000000,1680000,14000000,840000},
[76] = {8492532,339701,91.5,8492532,339701,91.5,16679943,667197,91.5,4271693,170867,91.5,5237909,209516,91.5,6436182,257447,91.5,6436182,257447,91.5,3762356,150494,91.5,6282460,251298,91.5,5103515,204140,91.5,6112162,244486,91.5,19066667,1144000,9533333,572000,28600000,1716000,14300000,858000},
[77] = {8670697,346827,93,8670697,346827,93,17029872,681194,93,4361309,174452,93,5347795,213911,93,6571207,262848,93,6571207,262848,93,3841286,153651,93,6414260,256570,93,5210582,208423,93,6240389,249615,93,19466667,1168000,9733333,584000,29200000,1752000,14600000,876000},
[78] = {8848862,353954,94.5,8848862,353954,94.5,17379801,695192,94.5,4450925,178036,94.5,5457681,218307,94.5,6706231,268249,94.5,6706231,268249,94.5,3920217,156808,94.5,6546060,261842,94.5,5317649,212705,94.5,6368616,254744,94.5,19866667,1192000,9933333,596000,29800000,1788000,14900000,894000},
[79] = {9027027,361081,96,9027027,361081,96,17729730,709189,96,4540541,181621,96,5567568,222702,96,6841256,273650,96,6841256,273650,96,3999147,159965,96,6677860,267114,96,5424715,216988,96,6496843,259873,96,20266667,1216000,10133333,608000,30400000,1824000,15200000,912000},
[80] = {9205192,368207,97.5,9205192,368207,97.5,18079659,723186,97.5,4630156,185206,97.5,5677454,227098,97.5,6976281,279051,97.5,6976281,279051,97.5,4078078,163123,97.5,6809659,272386,97.5,5531782,221271,97.5,6625070,265002,97.5,20666667,1240000,10333333,620000,31000000,1860000,15500000,930000},
[81] = {9383357,375334,99,9383357,375334,99,18429587,737183,99,4719772,188790,99,5787340,231493,99,7111306,284452,99,7111306,284452,99,4157008,166280,99,6941459,277658,99,5638849,225553,99,6753298,270131,99,21066667,1264000,10533333,632000,31600000,1896000,15800000,948000},
[82] = {9561522,382460,100.5,9561522,382460,100.5,18779516,751180,100.5,4809388,192375,100.5,5897226,235889,100.5,7246331,289853,100.5,7246331,289853,100.5,4235939,169437,100.5,7073259,282930,100.5,5745916,229836,100.5,6881525,275260,100.5,21466667,1288000,10733333,644000,32200000,1932000,16100000,966000},
[83] = {9739687,389587,102,9739687,389587,102,19129445,765177,102,4899004,195960,102,6007112,240284,102,7381355,295254,102,7381355,295254,102,4314869,172594,102,7205059,288202,102,5852982,234119,102,7009752,280390,102,21866667,1312000,10933333,656000,32800000,1968000,16400000,984000},
[84] = {9917852,396714,103.5,9917852,396714,103.5,19479374,779174,103.5,4988620,199544,103.5,6116999,244679,103.5,7516380,300655,103.5,7516380,300655,103.5,4393800,175751,103.5,7336859,293474,103.5,5960049,238401,103.5,7137979,285519,103.5,22266667,1336000,11133333,668000,33400000,2004000,16700000,1002000},
[85] = {10096017,403840,105,10096017,403840,105,19829303,793172,105,5078236,203129,105,6226885,249075,105,7651405,306056,105,7651405,306056,105,4472730,178909,105,7468659,298746,105,6067116,242684,105,7266206,290648,105,22666667,1360000,11333333,680000,34000000,2040000,17000000,1020000},
[86] = {10274182,410967,106.5,10274182,410967,106.5,20179232,807169,106.5,5167852,206714,106.5,6336771,253470,106.5,7786430,311457,106.5,7786430,311457,106.5,4551661,182066,106.5,7600459,304018,106.5,6174183,246967,106.5,7394433,295777,106.5,23066667,1384000,11533333,692000,34600000,2076000,17300000,1038000},
[87] = {10452347,418093,108,10452347,418093,108,20529161,821166,108,5257468,210298,108,6446657,257866,108,7921454,316858,108,7921454,316858,108,4630591,185223,108,7732258,309290,108,6281249,251249,108,7522661,300906,108,23466667,1408000,11733333,704000,35200000,2112000,17600000,1056000},
[88] = {10630512,425220,109.5,10630512,425220,109.5,20879090,835163,109.5,5347084,213883,109.5,6556543,262261,109.5,8056479,322259,109.5,8056479,322259,109.5,4709522,188380,109.5,7864058,314562,109.5,6388316,255532,109.5,7650888,306035,109.5,23866667,1432000,11933333,716000,35800000,2148000,17900000,1074000},
[89] = {10808677,432347,111,10808677,432347,111,21229018,849160,111,5436700,217467,111,6666430,266657,111,8191504,327660,111,8191504,327660,111,4788453,191538,111,7995858,319834,111,6495383,259815,111,7779115,311164,111,24266667,1456000,12133333,728000,36400000,2184000,18200000,1092000},
[90] = {10986842,439473,112.5,10986842,439473,112.5,21578947,863157,112.5,5526316,221052,112.5,6776316,271052,112.5,8326529,333061,112.5,8326529,333061,112.5,4867383,194695,112.5,8127658,325106,112.5,6602450,264097,112.5,7907342,316293,112.5,24666667,1480000,12333333,740000,37000000,2220000,18500000,1110000},
[91] = {7688478,307539,114,7688478,307539,114,19856330,794253,114,7621622,304864,114,4145092,165803,114,5125748,205029,114,5125748,205029,114,4314959,172598,114,5863653,234546,114,5332927,213317,114,4563135,182525,114,25066667,1504000,12533333,752000,37600000,2256000,18800000,1128000},
[92] = {7811166,312446,115.5,7811166,312446,115.5,20173186,806927,115.5,7743243,309729,115.5,4211238,168449,115.5,5207542,208301,115.5,5207542,208301,115.5,4383815,175352,115.5,5957222,238288,115.5,5418027,216721,115.5,4635951,185438,115.5,25466667,1528000,12733333,764000,38200000,2292000,19100000,1146000},
[93] = {7933855,317354,117,7933855,317354,117,20490043,819601,117,7864865,314594,117,4277383,171095,117,5289336,211573,117,5289336,211573,117,4452671,178106,117,6050791,242031,117,5503127,220125,117,4708767,188350,117,25866667,1552000,12933333,776000,38800000,2328000,19400000,1164000},
[94] = {8056543,322261,118.5,8056543,322261,118.5,20806899,832275,118.5,7986486,319459,118.5,4343528,173741,118.5,5371130,214845,118.5,5371130,214845,118.5,4521527,180861,118.5,6144360,245774,118.5,5588227,223529,118.5,4781583,191263,118.5,26266667,1576000,13133333,788000,39400000,2364000,19700000,1182000},
[95] = {8179232,327169,120,8179232,327169,120,21123755,844950,120,8108108,324324,120,4409673,176386,120,5452923,218116,120,5452923,218116,120,4590382,183615,120,6237929,249517,120,5673327,226933,120,4854399,194175,120,26666667,1600000,13333333,800000,40000000,2400000,20000000,1200000},
[96] = {8301920,332076,121.5,8301920,332076,121.5,21440612,857624,121.5,8229730,329189,121.5,4475818,179032,121.5,5534717,221388,121.5,5534717,221388,121.5,4659238,186369,121.5,6331498,253259,121.5,5758427,230337,121.5,4927215,197088,121.5,27066667,1624000,13533333,812000,40600000,2436000,20300000,1218000},
[97] = {8424609,336984,123,8424609,336984,123,21757468,870298,123,8351351,334054,123,4541963,181678,123,5616511,224660,123,5616511,224660,123,4728094,189123,123,6425067,257002,123,5843527,233741,123,5000031,200001,123,27466667,1648000,13733333,824000,41200000,2472000,20600000,1236000},
[98] = {8547297,341891,124.5,8547297,341891,124.5,22074324,882972,124.5,8472973,338918,124.5,4608108,184324,124.5,5698305,227932,124.5,5698305,227932,124.5,4796950,191877,124.5,6518636,260745,124.5,5928627,237145,124.5,5072847,202913,124.5,27866667,1672000,13933333,836000,41800000,2508000,20900000,1254000},
[99] = {8669986,346799,126,8669986,346799,126,22391181,895647,126,8594595,343783,126,4674253,186970,126,5780099,231203,126,5780099,231203,126,4865805,194632,126,6612205,264488,126,6013727,240549,126,5145663,205826,126,28266667,1696000,14133333,848000,42400000,2544000,21200000,1272000},
[100] ={8792674,351706,127.5,8792674,351706,127.5,22708037,908321,127.5,8716216,348648,127.5,4740398,189615,127.5,5861893,234475,127.5,5861893,234475,127.5,4934661,197386,127.5,6705774,268230,127.5,6098827,243953,127.5,5218479,208739,127.5,28666667,1720000,14333333,860000,43000000,2580000,21500000,1290000},
[101] ={8915363,356614,129,8915363,356614,129,23024893,920995,129,8837838,353513,129,4806543,192261,129,5943687,237747,129,5943687,237747,129,5003517,200140,129,6799343,271973,129,6183926,247357,129,5291295,211651,129,29066667,1744000,14533333,872000,43600000,2616000,21800000,1308000},
[102] ={9038051,361522,130.5,9038051,361522,130.5,23341750,933669,130.5,8959459,358378,130.5,4872688,194907,130.5,6025480,241019,130.5,6025480,241019,130.5,5072373,202894,130.5,6892912,275716,130.5,6269026,250761,130.5,5364111,214564,130.5,29466667,1768000,14733333,884000,44200000,2652000,22100000,1326000},
[103] ={9160740,366429,132,9160740,366429,132,23658606,946344,132,9081081,363243,132,4938834,197553,132,6107274,244290,132,6107274,244290,132,5141228,205649,132,6986481,279459,132,6354126,254165,132,5436927,217477,132,29866667,1792000,14933333,896000,44800000,2688000,22400000,1344000},
[104] ={9283428,371337,133.5,9283428,371337,133.5,23975462,959018,133.5,9202703,368108,133.5,5004979,200199,133.5,6189068,247562,133.5,6189068,247562,133.5,5210084,208403,133.5,7080050,283201,133.5,6439226,257569,133.5,5509743,220389,133.5,30266667,1816000,15133333,908000,45400000,2724000,22700000,1362000},
[105] ={9447013,377880,135,9447013,377880,135,24397937,975917,135,9364865,374594,135,5093172,203726,135,6298127,251925,135,6298127,251925,135,5301892,212075,135,7204808,288192,135,6552693,262107,135,5606831,224273,135,30800000,1848000,15400000,924000,46200000,2772000,23100000,1386000},
[106] ={15711238,628449,136.5,15711238,628449,136.5,27494666,1099786,136.5,3509957,140398,136.5,10279161,411166,136.5,11363494,454539,136.5,11363494,454539,136.5,8491592,339663,136.5,4923063,196922,136.5,9172744,366909,136.5,9446246,377849,136.5,31333333,1880000,15666667,940000,47000000,2820000,23500000,1410000},
[107] ={15978663,639146,138,15978663,639146,138,27962660,1118506,138,3569701,142788,138,10454125,418165,138,11556916,462276,138,11556916,462276,138,8636130,345445,138,5006860,200274,138,9328875,373155,138,9607033,384281,138,31866667,1912000,15933333,956000,47800000,2868000,23900000,1434000},
[108] ={16246088,649843,139.5,16246088,649843,139.5,28430654,1137226,139.5,3629445,145177,139.5,10629090,425163,139.5,11750337,470013,139.5,11750337,470013,139.5,8780667,351226,139.5,5090657,203626,139.5,9485007,379400,139.5,9767820,390712,139.5,32400000,1944000,16200000,972000,48600000,2916000,24300000,1458000},
[109] ={16513514,660540,141,16513514,660540,141,28898649,1155945,141,3689189,147567,141,10804054,432162,141,11943758,477750,141,11943758,477750,141,8925205,357008,141,5174453,206978,141,9641139,385645,141,9928607,397144,141,32933333,1976000,16466667,988000,49400000,2964000,24700000,1482000},
[110] ={16780939,671237,142.5,16780939,671237,142.5,29366643,1174665,142.5,3748933,149957,142.5,10979018,439160,142.5,12137179,485487,142.5,12137179,485487,142.5,9069743,362789,142.5,5258250,210330,142.5,9797271,391890,142.5,10089394,403575,142.5,33466667,2008000,16733333,1004000,50200000,3012000,25100000,1506000},
[111] ={17048364,681934,144,17048364,681934,144,29834637,1193385,144,3808677,152347,144,11153983,446159,144,12330600,493224,144,12330600,493224,144,9214281,368571,144,5342047,213681,144,9953403,398136,144,10250182,410007,144,34000000,2040000,17000000,1020000,51000000,3060000,25500000,1530000},
[112] ={17315789,692631,145.5,17315789,692631,145.5,30302632,1212105,145.5,3868421,154736,145.5,11328947,453157,145.5,12524022,500960,145.5,12524022,500960,145.5,9358818,374352,145.5,5425844,217033,145.5,10109534,404381,145.5,10410969,416438,145.5,34533333,2072000,17266667,1036000,51800000,3108000,25900000,1554000},
[113] ={17583215,703328,147,17583215,703328,147,30770626,1230825,147,3928165,157126,147,11503912,460156,147,12717443,508697,147,12717443,508697,147,9503356,380134,147,5509641,220385,147,10265666,410626,147,10571756,422870,147,35066667,2104000,17533333,1052000,52600000,3156000,26300000,1578000},
[114] ={17850640,714025,148.5,17850640,714025,148.5,31238620,1249544,148.5,3987909,159516,148.5,11678876,467155,148.5,12910864,516434,148.5,12910864,516434,148.5,9647894,385915,148.5,5593438,223737,148.5,10421798,416871,148.5,10732543,429301,148.5,35600000,2136000,17800000,1068000,53400000,3204000,26700000,1602000},
[115] ={18118065,724722,150,18118065,724722,150,31706615,1268264,150,4047653,161906,150,11853841,474153,150,13104285,524171,150,13104285,524171,150,9792432,391697,150,5677234,227089,150,10577930,423117,150,10893330,435733,150,36133333,2168000,18066667,1084000,54200000,3252000,27100000,1626000},
[116] ={18385491,735419,151.5,18385491,735419,151.5,32174609,1286984,151.5,4107397,164295,151.5,12028805,481152,151.5,13297706,531908,151.5,13297706,531908,151.5,9936969,397478,151.5,5761031,230441,151.5,10734062,429362,151.5,11054117,442164,151.5,36666667,2200000,18333333,1100000,55000000,3300000,27500000,1650000},
[117] ={18652916,746116,153,18652916,746116,153,32642603,1305704,153,4167141,166685,153,12203770,488150,153,13491128,539645,153,13491128,539645,153,10081507,403260,153,5844828,233793,153,10890193,435607,153,11214904,448596,153,37200000,2232000,18600000,1116000,55800000,3348000,27900000,1674000},
[118] ={18920341,756813,154.5,18920341,756813,154.5,33110597,1324423,154.5,4226885,169075,154.5,12378734,495149,154.5,13684549,547381,154.5,13684549,547381,154.5,10226045,409041,154.5,5928625,237144,154.5,11046325,441853,154.5,11375692,455027,154.5,37733333,2264000,18866667,1132000,56600000,3396000,28300000,1698000},
[119] ={19187767,767510,156,19187767,767510,156,33578592,1343143,156,4286629,171465,156,12553698,502147,156,13877970,555118,156,13877970,555118,156,10370583,414823,156,6012422,240496,156,11202457,448098,156,11536479,461459,156,38266667,2296000,19133333,1148000,57400000,3444000,28700000,1722000},
[120] ={19455192,778207,157.5,19455192,778207,157.5,34046586,1361863,157.5,4346373,173854,157.5,12728663,509146,157.5,14071391,562855,157.5,14071391,562855,157.5,10515120,420604,157.5,6096218,243848,157.5,11358589,454343,157.5,11697266,467890,157.5,38800000,2328000,19400000,1164000,58200000,3492000,29100000,1746000},
[121] ={17414651,696586,159,17414651,696586,159,43116999,1724679,159,4406117,176244,159,6609175,264366,159,14915191,596607,159,14915191,596607,159,16887433,675497,159,6940036,277601,159,7310232,292409,159,5780583,231223,159,39333333,2360000,19666667,1180000,59000000,3540000,29500000,1770000},
[122] ={17650782,706031,160.5,17650782,706031,160.5,43701636,1748065,160.5,4465861,178634,160.5,6698791,267951,160.5,15117431,604697,160.5,15117431,604697,160.5,17116416,684656,160.5,7034138,281365,160.5,7409354,296374,160.5,5858963,234358,160.5,39866667,2392000,19933333,1196000,59800000,3588000,29900000,1794000},
[123] ={17886913,715476,162,17886913,715476,162,44286273,1771450,162,4525605,181024,162,6788407,271536,162,15319671,612786,162,15319671,612786,162,17345398,693815,162,7128240,285129,162,7508475,300339,162,5937344,237493,162,40400000,2424000,20200000,1212000,60600000,3636000,30300000,1818000},
[124] ={18123044,724921,163.5,18123044,724921,163.5,44870910,1794836,163.5,4585349,183413,163.5,6878023,275120,163.5,15521911,620876,163.5,15521911,620876,163.5,17574380,702975,163.5,7222342,288893,163.5,7607597,304303,163.5,6015725,240628,163.5,40933333,2456000,20466667,1228000,61400000,3684000,30700000,1842000},
[125] ={18359175,734366,165,18359175,734366,165,45455548,1818221,165,4645092,185803,165,6967639,278705,165,15724151,628966,165,15724151,628966,165,17803362,712134,165,7316444,292657,165,7706719,308268,165,6094106,243764,165,41466667,2488000,20733333,1244000,62200000,3732000,31100000,1866000},
[126] ={18595306,743812,166.5,18595306,743812,166.5,46040185,1841607,166.5,4704836,188193,166.5,7057255,282290,166.5,15926390,637055,166.5,15926390,637055,166.5,18032344,721293,166.5,7410546,296421,166.5,7805841,312233,166.5,6172486,246899,166.5,42000000,2520000,21000000,1260000,63000000,3780000,31500000,1890000},
[127] ={18831437,753257,168,18831437,753257,168,46624822,1864992,168,4764580,190583,168,7146871,285874,168,16128630,645145,168,16128630,645145,168,18261326,730453,168,7504649,300185,168,7904963,316198,168,6250867,250034,168,42533333,2552000,21266667,1276000,63800000,3828000,31900000,1914000},
[128] ={19067568,762702,169.5,19067568,762702,169.5,47209459,1888378,169.5,4824324,192972,169.5,7236486,289459,169.5,16330870,653234,169.5,16330870,653234,169.5,18490308,739612,169.5,7598751,303950,169.5,8004084,320163,169.5,6329248,253169,169.5,43066667,2584000,21533333,1292000,64600000,3876000,32300000,1938000},
[129] ={19303698,772147,171,19303698,772147,171,47794097,1911763,171,4884068,195362,171,7326102,293044,171,16533110,661324,171,16533110,661324,171,18719291,748771,171,7692853,307714,171,8103206,324128,171,6407629,256305,171,43600000,2616000,21800000,1308000,65400000,3924000,32700000,1962000},
[130] ={19539829,781593,172.5,19539829,781593,172.5,48378734,1935149,172.5,4943812,197752,172.5,7415718,296628,172.5,16735350,669413,172.5,16735350,669413,172.5,18948273,757930,172.5,7786955,311478,172.5,8202328,328093,172.5,6486010,259440,172.5,44133333,2648000,22066667,1324000,66200000,3972000,33100000,1986000},
[131] ={19775960,791038,174,19775960,791038,174,48963371,1958534,174,5003556,200142,174,7505334,300213,174,16937590,677503,174,16937590,677503,174,19177255,767090,174,7881057,315242,174,8301450,332057,174,6564390,262575,174,44666667,2680000,22333333,1340000,67000000,4020000,33500000,2010000},
[132] ={20012091,800483,175.5,20012091,800483,175.5,49548009,1981920,175.5,5063300,202532,175.5,7594950,303798,175.5,17139830,685593,175.5,17139830,685593,175.5,19406237,776249,175.5,7975160,319006,175.5,8400571,336022,175.5,6642771,265710,175.5,45200000,2712000,22600000,1356000,67800000,4068000,33900000,2034000},
[133] ={20248222,809928,177,20248222,809928,177,50132646,2005305,177,5123044,204921,177,7684566,307382,177,17342070,693682,177,17342070,693682,177,19635219,785408,177,8069262,322770,177,8499693,339987,177,6721152,268846,177,45733333,2744000,22866667,1372000,68600000,4116000,34300000,2058000},
[134] ={20484353,819374,178.5,20484353,819374,178.5,50717283,2028691,178.5,5182788,207311,178.5,7774182,310967,178.5,17544309,701772,178.5,17544309,701772,178.5,19864201,794568,178.5,8163364,326534,178.5,8598815,343952,178.5,6799533,271981,178.5,46266667,2776000,23133333,1388000,69400000,4164000,34700000,2082000},
[135] ={20720484,828819,180,20720484,828819,180,51301920,2052076,180,5242532,209701,180,7863798,314551,180,17746549,709861,180,17746549,709861,180,20093183,803727,180,8257466,330298,180,8697937,347917,180,6877914,275116,180,46800000,2808000,23400000,1404000,70200000,4212000,35100000,2106000},
[136] ={20956615,838264,181.5,20956615,838264,181.5,51886558,2075462,181.5,5302276,212091,181.5,7953414,318136,181.5,17948789,717951,181.5,17948789,717951,181.5,20322166,812886,181.5,8351568,334062,181.5,8797059,351882,181.5,6956294,278251,181.5,47333333,2840000,23666667,1420000,71000000,4260000,35500000,2130000},
[137] ={21192745,847709,183,21192745,847709,183,52471195,2098847,183,5362020,214480,183,8043030,321721,183,18151029,726041,183,18151029,726041,183,20551148,822045,183,8445670,337826,183,8896180,355847,183,7034675,281387,183,47866667,2872000,23933333,1436000,71800000,4308000,35900000,2154000},
[138] ={21428876,857155,184.5,21428876,857155,184.5,53055832,2122233,184.5,5421764,216870,184.5,8132646,325305,184.5,18353269,734130,184.5,18353269,734130,184.5,20780130,831205,184.5,8539773,341590,184.5,8995302,359812,184.5,7113056,284522,184.5,48400000,2904000,24200000,1452000,72600000,4356000,36300000,2178000},
[139] ={21665007,866600,186,21665007,866600,186,53640469,2145618,186,5481508,219260,186,8222262,328890,186,18555509,742220,186,18555509,742220,186,21009112,840364,186,8633875,345354,186,9094424,363776,186,7191437,287657,186,48933333,2936000,24466667,1468000,73400000,4404000,36700000,2202000},
[140] ={21901138,876045,187.5,21901138,876045,187.5,54225107,2169004,187.5,5541252,221650,187.5,8311878,332475,187.5,18757749,750309,187.5,18757749,750309,187.5,21238094,849523,187.5,8727977,349119,187.5,9193546,367741,187.5,7269817,290792,187.5,49466667,2968000,24733333,1484000,74200000,4452000,37100000,2226000},
[141] ={22137269,885490,189,22137269,885490,189,54809744,2192389,189,5600996,224039,189,8401494,336059,189,18959989,758399,189,18959989,758399,189,21467076,858683,189,8822079,352883,189,9292668,371706,189,7348198,293927,189,50000000,3000000,25000000,1500000,75000000,4500000,37500000,2250000},
[142] ={22373400,894935,190.5,22373400,894935,190.5,55394381,2215775,190.5,5660740,226429,190.5,8491110,339644,190.5,19162228,766489,190.5,19162228,766489,190.5,21696058,867842,190.5,8916181,356647,190.5,9391789,375671,190.5,7426579,297063,190.5,50533333,3032000,25266667,1516000,75800000,4548000,37900000,2274000},
[143] ={22609531,904381,192,22609531,904381,192,55979018,2239160,192,5720484,228819,192,8580725,343229,192,19364468,774578,192,19364468,774578,192,21925041,877001,192,9010283,360411,192,9490911,379636,192,7504960,300198,192,51066667,3064000,25533333,1532000,76600000,4596000,38300000,2298000},
[144] ={22845661,913826,193.5,22845661,913826,193.5,56563656,2262546,193.5,5780228,231209,193.5,8670341,346813,193.5,19566708,782668,193.5,19566708,782668,193.5,22154023,886160,193.5,9104386,364175,193.5,9590033,383601,193.5,7583341,303333,193.5,51600000,3096000,25800000,1548000,77400000,4644000,38700000,2322000},
[145] ={23081792,923271,195,23081792,923271,195,57148293,2285931,195,5839972,233598,195,8759957,350398,195,19768948,790757,195,19768948,790757,195,22383005,895320,195,9198488,367939,195,9689155,387566,195,7661721,306468,195,52133333,3128000,26066667,1564000,78200000,4692000,39100000,2346000},
[146] ={23317923,932716,196.5,23317923,932716,196.5,57732930,2309317,196.5,5899716,235988,196.5,8849573,353982,196.5,19971188,798847,196.5,19971188,798847,196.5,22611987,904479,196.5,9292590,371703,196.5,9788277,391531,196.5,7740102,309604,196.5,52666667,3160000,26333333,1580000,79000000,4740000,39500000,2370000},
[147] ={23554054,942162,198,23554054,942162,198,58317568,2332702,198,5959459,238378,198,8939189,357567,198,20173428,806937,198,20173428,806937,198,22840969,913638,198,9386692,375467,198,9887398,395495,198,7818483,312739,198,53200000,3192000,26600000,1596000,79800000,4788000,39900000,2394000},
[148] ={23790185,951607,199.5,23790185,951607,199.5,58902205,2356088,199.5,6019203,240768,199.5,9028805,361152,199.5,20375668,815026,199.5,20375668,815026,199.5,23069951,922798,199.5,9480794,379231,199.5,9986520,399460,199.5,7896864,315874,199.5,53733333,3224000,26866667,1612000,80600000,4836000,40300000,2418000},
[149] ={24026316,961052,201,24026316,961052,201,59486842,2379473,201,6078947,243157,201,9118421,364736,201,20577908,823116,201,20577908,823116,201,23298934,931957,201,9574897,382995,201,10085642,403425,201,7975244,319009,201,54266667,3256000,27133333,1628000,81400000,4884000,40700000,2442000},
[150] ={24262447,970497,202.5,24262447,970497,202.5,60071479,2402859,202.5,6138691,245547,202.5,9208037,368321,202.5,20780147,831205,202.5,20780147,831205,202.5,23527916,941116,202.5,9668999,386759,202.5,10184764,407390,202.5,8053625,322145,202.5,54800000,3288000,27400000,1644000,82200000,4932000,41100000,2466000},
}

function Xiulian_PreLoad()

	-- 打开界面
	this:RegisterEvent("UI_COMMAND");

	--离开场景，自动关闭
	this:RegisterEvent("HIDE_ON_SCENE_TRANSED");
	this:RegisterEvent("UNIT_XIULIAN");
	this:RegisterEvent("UINT_POWER");

	-- 游戏窗口尺寸发生了变化
	this:RegisterEvent("ADJEST_UI_POS")

	-- 游戏分辨率发生了变化
	this:RegisterEvent("VIEW_RESOLUTION_CHANGED")

	this:RegisterEvent("UPDATE_WILLGET_MISSION_TRACK");		--升级

	this:RegisterEvent("TOGGLE_UPDATE_INFANT"); --子女有变化 刷新按钮状态

	this:RegisterEvent("FINISH_MISSION");

end

function Xiulian_OnLoad()

	XIULIAN_BOOKS[1] = Xiulian_XinfaSkill_1
	XIULIAN_BOOKS[2] = Xiulian_XinfaSkill_2
	XIULIAN_BOOKS[3] = Xiulian_XinfaSkill_3
	XIULIAN_BOOKS[4] = Xiulian_XinfaSkill_4

	XIULIAN_MIJI[1] = Xiulian_ZhaoshiSkill_1
	XIULIAN_MIJI[2] = Xiulian_ZhaoshiSkill_2
	XIULIAN_MIJI[3] = Xiulian_ZhaoshiSkill_3
	XIULIAN_MIJI[4] = Xiulian_ZhaoshiSkill_4
	XIULIAN_MIJI[5] = Xiulian_ZhaoshiSkill_5
	XIULIAN_MIJI[6] = Xiulian_ZhaoshiSkill_6

	XIULIAN_MIJI_TEXT[1] = Xiulian_ZhaoshiSkill_level1
	XIULIAN_MIJI_TEXT[2] = Xiulian_ZhaoshiSkill_level2
	XIULIAN_MIJI_TEXT[3] = Xiulian_ZhaoshiSkill_level3
	XIULIAN_MIJI_TEXT[4] = Xiulian_ZhaoshiSkill_level4
	XIULIAN_MIJI_TEXT[5] = Xiulian_ZhaoshiSkill_level5
	XIULIAN_MIJI_TEXT[6] = Xiulian_ZhaoshiSkill_level6

	-- 保存界面的默认相对位置
	g_Xiulian_Frame_UnifiedXPosition	= Xiulian_Frame : GetProperty("UnifiedXPosition");
	g_Xiulian_Frame_UnifiedYPosition	= Xiulian_Frame : GetProperty("UnifiedYPosition");

end

-- OnEvent
function Xiulian_OnEvent(event)

	if ( event == "UPDATE_WILLGET_MISSION_TRACK" )  or (event=="TOGGLE_UPDATE_INFANT")  or (event == "FINISH_MISSION") then
		local nLevel =Player:GetData("LEVEL")
		Xiulian_Refresh_Page_Button(nLevel)
	end

	if ( event == "UI_COMMAND" and tonumber(arg0) == 2019042001 ) then
	    if(this:IsVisible()) then
			this:Hide();
			return;
		end
	    local selfUnionPos = Variable:GetVariable("SelfUnionPos");
	    if(selfUnionPos ~= nil) then
		    Xiulian_Frame:SetProperty("UnifiedPosition", selfUnionPos);
    	end
	    XIULIAN_BOOK_SELECT = 1;
		XIULIAN_MIJI_SELECT = -1;
		this:Show();
		Xiulian_Update()
		Xiulian_SetTabState()
		local nLevel =Player:GetData("LEVEL")
		Xiulian_Refresh_Page_Button(nLevel)
	end

	if( event == "HIDE_ON_SCENE_TRANSED") then
		this:Hide();
		return;
	end

	if( event == "UNIT_XIULIAN" ) then
	    for i = 1, 2 do
			local theAction = GemCarve:UpdateProductAction(g_Xiulian_Book[i])--EnumAction(i - 1, "xiulianbook")
			if(theAction:GetID() ~= 0) then
				XIULIAN_BOOKS[i] : SetActionItem(theAction:GetID())
			end
		end
		Xiulian_JingJie_Selected_Update()
		Xiulian_Skill_Clicked_Update()
		Xiulian_SetSelectState()
	end

	if( event == "UI_COMMAND" and tonumber(arg0) == 2019042002 ) then
        --设置功力
        --Xiulian_Gongli_Text:SetText("#{XL_XML_87}")
        local nPower =  DataPool:GetPlayerMission_DataRound(316)
		local attch =""
		--Xiulian_Gongli_Text:SetProperty("UnifiedSize","{{0.000000,120.000000},{0.000000,20.000000}}");
		--Xiulian_Gongli_Text:SetProperty("UnifiedPosition","{{0.500000,-56.000000},{1.000000,-22.000000}}");
	    --Xiulian_Vigor:SetText(nPower.."/100")
	end

	-- 游戏窗口尺寸发生了变化
	if (event == "ADJEST_UI_POS" ) then
		-- 更新背包界面位置
		Xiulian_Frame_On_ResetPos()

	-- 游戏分辨率发生了变化
	elseif (event == "VIEW_RESOLUTION_CHANGED") then
		-- 更新背包界面位置
		Xiulian_Frame_On_ResetPos()
	end

end

function Xiulian_SelfEquip_Page_Switch()

	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);

	OpenEquip(1);
	this:Hide();
end

function Xiulian_Pet_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);

	TogglePetPage();
	this:Hide();
end

--神木王鼎
function Xiulian_ShenDing_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenShengDingLayout();
	this:Hide();
end

function Xiulian_Ride_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);

	OpenRidePage();
	this:Hide();
end

function Xiulian_SelfData_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);

	SystemSetup:OpenPrivatePage("self");
	this:Hide();
end

function Xiulian_Blog_Switch()

	local strCharName =  Player:GetName();
	local strAccount =  Player:GetData("ACCOUNTNAME")
	PushDebugMessage("暂不开放博客")--Blog:OpenBlogPage(strAccount,strCharName,true);

end

function Xiulian_Xiulian_Switch()
    Xiulian_Xiulian:SetCheck(1)
end

function Xiulian_Other_Info_Page_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OtherInfoPage();
	this:Hide();
end

function Xiulian_Wuhun_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	ToggleWuhunPage();
	this:Hide();
end

function Xiulian_JingMai_Page_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenJingMaiLayout()
	this:Hide();
end

function Xiulian_OpenWuYi()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenWuyiLayout()	
 	this:Hide();
end

function Xiulian_ShenDing_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenShengDingLayout();
 	this:Hide();
end

function Xiulian_OpenShenQi()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenShengQiLayout()	
 	this:Hide();
end

function Xiulian_SetTabState()
	Xiulian_SelfEquip:SetCheck(0)
	Xiulian_SelfData:SetCheck(0)
	-- Xiulian_Miji:SetCheck(0)
	Xiulian_Pet:SetCheck(0)
	Xiulian_Xiulian:SetCheck(1)
	Xiulian_Ride:SetCheck(0)
	Xiulian_OtherInfo:SetCheck(0)
	-- Xiulian_JingMai:SetCheck(0)
end


function Xiulian_Xinfa_Clicked(nIndex)
	if(nIndex < 4 and nIndex > 0) then
		XIULIAN_BOOK_SELECT = nIndex
		XIULIAN_MIJI_SELECT = -1
		Xiulian_JingJie_Selected_Update()
	else
	    --PushDebugMessage("#{XL_090707_50}")
	end
end
--===============================================
-- 更新
--===============================================
function Xiulian_Update()
	for i = 1, 2 do
		local theAction = GemCarve:UpdateProductAction(g_Xiulian_Book[i])--EnumAction(i - 1, "xiulianbook")
		if(theAction:GetID() ~= 0) then
			XIULIAN_BOOKS[i] : SetActionItem(theAction:GetID())
		end
	end
    Xiulian_JingJie_Selected_Update()
    --设置功力
    --Xiulian_Gongli_Text:SetText("#{XL_XML_87}")
    -- local nPower =  DataPool:GetPlayerMission_DataRound(248)
	local attch =""
	--Xiulian_Gongli_Text:SetProperty("UnifiedSize","{{0.000000,120.000000},{0.000000,20.000000}}");
	--Xiulian_Gongli_Text:SetProperty("UnifiedPosition","{{0.500000,-56.000000},{1.000000,-22.000000}}");
	--Xiulian_Gongli_Tooltip:SetText(attch)
	--Xiulian_Vigor:SetText(nPower.."/100")
end

--===============================================
-- 关闭
--===============================================
function Xiulian_Close_Cilcked()
		this:Hide()
end

function Xiulian_Skill_Clicked(nIndex)
	if MIJI_CAN_SELECT == false then
		return
	end
	if(XIULIAN_BOOK_SELECT == 1) then
	   if (nIndex ~= 6)  then
         XIULIAN_MIJI_SELECT  = nIndex
	   else
	     XIULIAN_MIJI_SELECT  = -1
	   end
	elseif(XIULIAN_BOOK_SELECT == 2)  then
	     XIULIAN_MIJI_SELECT  = nIndex + 5
	--add by kaibin for 开启第3本修炼
	elseif XIULIAN_BOOK_SELECT == 3 then
		if nIndex >= 1 and nIndex <= 4 then
			XIULIAN_MIJI_SELECT = nIndex + 11
		else
			XIULIAN_MIJI_SELECT = -1
		end
	else
         XIULIAN_MIJI_SELECT = -1
	end
	Xiulian_Skill_Clicked_Update()
end

function Lua_GetXiuLianData(DataType)
	if DataType == "XIULIANFLAG" then
		local ret = 0
		for i = 0,14 do
			if GetXiuLianMiJiInfo(i,"Level") ~= 0 then
				ret = ret + 1
			end
		end
		return ret
	end
	if DataType == "XIULIAN_STR" then
		local nAddData = GetXiuLianMiJiInfo(0,"XYJ_MIJI_FIN_ADD")
		return math.ceil(Lua_GetHumanBaseAttr(1) * (nAddData / 100))
	end
	if DataType == "XIULIAN_SPR" then
		local nAddData = GetXiuLianMiJiInfo(1,"XYJ_MIJI_FIN_ADD")
		return math.ceil(Lua_GetHumanBaseAttr(2) * (nAddData / 100))
	end
	if DataType == "XIULIAN_CON" then
		local nAddData = GetXiuLianMiJiInfo(2,"XYJ_MIJI_FIN_ADD")
		return math.ceil(Lua_GetHumanBaseAttr(3) * (nAddData / 100))
	end
	if DataType == "XIULIAN_INT" then
		local nAddData = GetXiuLianMiJiInfo(3,"XYJ_MIJI_FIN_ADD")
		return math.ceil(Lua_GetHumanBaseAttr(4) * (nAddData / 100))
	end
	if DataType == "XIULIAN_DEX" then
		local nAddData = GetXiuLianMiJiInfo(4,"XYJ_MIJI_FIN_ADD")
		return math.ceil(Lua_GetHumanBaseAttr(5) * (nAddData / 100))
	end
	if DataType == "XIULIAN_HIT" then
		local nAddData = GetXiuLianMiJiInfo(9,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(5) * (nAddData / 100))
	end
	if DataType == "XIULIAN_ATTP" then
		local nAddData = GetXiuLianMiJiInfo(5,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(1) * (nAddData / 100))
	end
	if DataType == "XIULIAN_DEFP" then
		local nAddData = GetXiuLianMiJiInfo(7,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(3) * (nAddData / 100))
	end
	if DataType == "XIULIAN_ATTM" then
		local nAddData = GetXiuLianMiJiInfo(6,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(2) * (nAddData / 100))
	end
	if DataType == "XIULIAN_DEFM" then
		local nAddData = GetXiuLianMiJiInfo(8,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(4) * (nAddData / 100))
	end
	if DataType == "XIULIAN_MISS" then
		local nAddData = GetXiuLianMiJiInfo(10,"XYJ_MIJI_FIN_ADD")
		return math.ceil(LuaFnGetHumanAttrData(6) * (nAddData / 100))
	end
end
function Lua_GetHumanBaseAttr(nType)
	local AttrLevelUpTable = {
	[0] = {{6,1,8,2,3},{9,1,6,1,3},{8,2,6,1,3},{1,9,4,4,2},{1,7,5,5,2},{1,8,6,4,1},{5,5,4,2,4},{8,2,6,1,3},{1,7,5,4,3},{1,9,4,4,3},{1,7,5,4,3},{1,9,4,4,3},{1,7,5,4,3}},
	[1] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[2] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[3] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[4] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[5] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[6] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[7] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[8] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[9] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[10] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[11] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[12] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[13] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[14] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[15] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[16] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[17] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[18] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[19] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[20] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[21] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[22] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[23] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[24] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[25] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[26] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[27] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[28] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[29] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[30] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[31] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[32] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[33] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[34] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[35] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[36] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[37] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[38] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[39] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[40] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[41] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[42] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[43] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[44] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[45] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[46] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[47] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[48] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[49] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[50] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[51] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[52] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[53] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[54] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[55] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[56] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[57] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[58] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[59] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[60] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[61] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[62] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[63] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[64] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[65] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[66] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[67] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[68] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[69] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[70] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[71] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[72] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[73] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[74] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[75] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[76] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[77] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[78] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[79] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[80] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[81] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[82] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[83] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[84] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[85] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[86] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[87] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[88] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[89] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[90] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[91] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[92] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[93] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[94] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[95] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[96] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[97] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[98] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[99] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[100] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[101] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[102] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[103] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[104] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[105] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[106] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[107] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[108] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[109] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[110] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[111] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[112] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[113] = {{2,1,2,0,0},{2,1,2,0,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[114] = {{1,0,2,1,1},{2,0,1,1,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	[115] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,0,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[116] = {{2,0,2,0,1},{2,0,2,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,2,1,0},{1,1,1,1,1},{2,1,1,0,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1},{0,2,1,1,1}},
	[117] = {{1,0,3,1,0},{3,0,1,0,1},{2,0,2,0,1},{1,2,1,1,0},{1,1,1,2,0},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1},{1,2,1,1,1},{0,1,2,1,1}},
	[118] = {{2,1,2,0,0},{2,0,2,1,0},{1,1,1,1,1},{0,2,2,1,0},{0,2,2,1,0},{1,1,2,1,0},{1,1,2,0,1},{2,0,1,0,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1},{0,2,2,1,2},{1,2,1,0,1}},
	[119] = {{1,0,2,1,1},{2,1,1,0,1},{2,0,2,0,1},{0,2,1,1,1},{0,1,1,2,1},{0,2,1,1,1},{1,1,1,1,1},{2,0,2,0,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1},{0,2,1,1,1},{0,1,2,1,1}},
	}
	--nLevel,nType AttrLevelUpTable
	local nLevel = Player:GetData("LEVEL")
	if nLevel < 1 or nLevel > 119 then
		return 0
	end
	if nType < 1 or nType > 5 then
		return 0
	end
	local nMenPai = tonumber(Player:GetData("MEMPAI"))
	if nMenPai < 0 or nMenPai > 13 then	    
		nMenPai = 9	
	end
	if nMenPai == 13 then
	   nMenPai = 1
	end
	local RetData = 0--AttrLevelUpTable[i][nMenPai][nType]
	for i = 0,nLevel do
		RetData = RetData + AttrLevelUpTable[i][nMenPai+1][nType]
	end	
	return RetData
end

function RestXiuLianServerData_1(nData,nIndex)
    --恶心 怪事，算出来的数字不对。。数学学得太差了。
    local nJingjie_Data = {}
	nData = tostring(nData)
	local JingJieData_1 = ""
	for i = 1,8 do
	    nJingjie_Data[i] = tonumber(string.sub(nData,i,i))
	end
	return nJingjie_Data[9-nIndex]
end

function RestXiuLianServerData_2(nData,nIndex)
    local nJingjie_Data = {}
	nData = tostring(nData)
	local JingJieData_1 = ""
	for i = 1,7 do
	    nJingjie_Data[i] = tonumber(string.sub(nData,i,i))
	end
	return nJingjie_Data[8-nIndex]
end

function GetXiuLianMiJiInfo(nIndex,DataType)
	local MijiBookData = {
	{0,"#{XYJ_XLMJ_001}"},
	{0,"#{XYJ_XLMJ_002}"},
	{0,"#{XYJ_XLMJ_003}"},
	{0,"#{XYJ_XLMJ_004}"},
	{0,"#{XYJ_XLMJ_005}"},
	{1,"#{XYJ_XLMJ_006}"},
	{1,"#{XYJ_XLMJ_007}"},
	{1,"#{XYJ_XLMJ_008}"},
	{1,"#{XYJ_XLMJ_009}"},
	{1,"#{XYJ_XLMJ_010}"},
	{1,"#{XYJ_XLMJ_011}"},
	{2,"#{XYJ_XLMJ_012}"},
	{2,"#{XYJ_XLMJ_013}"},
	{2,"#{XYJ_XLMJ_014}"},
	{2,"#{XYJ_XLMJ_015}"},
	}
	nIndex = nIndex + 1
	if DataType == "Name" then
		local nIndex_Real = g_Xiulian_MijiBook[nIndex]
		local nName = LuaFnGetItemName(nIndex_Real)
		if nName ~= nil then
			return nName
		else
			return ""
		end
	end
	if DataType == "JingJie" then
		if nIndex >= 1 and nIndex < 9 then
			local tempJingJieData = DataPool:GetPlayerMission_DataRound(317)
			local Jingjie_Data = RestXiuLianServerData_1(tempJingJieData,nIndex)
			if Jingjie_Data ~= nil then
				if Jingjie_Data < 1 then
					Jingjie_Data = 1
				end
				return Jingjie_Data
			end
			return 1
		end
		if nIndex >= 9 and nIndex < 16 then
			nIndex = nIndex - 8 --修正数据
			local tempJingJieData_2 = DataPool:GetPlayerMission_DataRound(318)
			local Jingjie_Data_2 = RestXiuLianServerData_2(tempJingJieData_2,nIndex)
			if Jingjie_Data_2 ~= nil then
				if Jingjie_Data_2 < 1 then
					Jingjie_Data_2 = 1
				end
				return Jingjie_Data_2
			end
			return 1
		end
		return 1
	end
	if DataType == "Level" then
		local MD_Data_Start = 318 --251-258
		local MD_Data = math.ceil(nIndex/2) + MD_Data_Start
		local tempLevelData = DataPool:GetPlayerMission_DataRound(MD_Data)
		local ret_Level = 1
		if math.mod(nIndex,2) == 1 then
			ret_Level = math.mod(math.floor(tempLevelData/1000),1000)
		else
			ret_Level = math.mod(math.floor(tempLevelData/1),1000)
		end
		return ret_Level
	end
	if DataType == "MaxLevel" then
		local nJingJieData = GetXiuLianMiJiInfo(nIndex - 1,"JingJie")
		local nMaxLevel = 10
		if nJingJieData <= 6 then
			nMaxLevel = nJingJieData * 10
		elseif nJingJieData <= 12 and nJingJieData >= 7 then
			nMaxLevel = 60 + (nJingJieData - 6) * 15
		end
		return nMaxLevel
	end
	if DataType == "Explain" then
		local nExplain = MijiBookData[nIndex][2]
		if nExplain ~= nil then
			return nExplain
		else
			return ""
		end
	end
	if DataType == "UpLevelNeedMoney" then
		local nBookLevel = GetXiuLianMiJiInfo(nIndex - 1,"Level")
		if nBookLevel >= 150 then
			return 0
		end
--		PushDebugMessage("MONEY::nIndex "..nIndex.." nBookLevel "..nBookLevel)
		local UpLevelNeedMoney = 0
		if nIndex < 12 then
			UpLevelNeedMoney = XiuLianDetial[nBookLevel + 1][2 + 3*(nIndex-1)]
			if UpLevelNeedMoney == nil then
				UpLevelNeedMoney = 0
			end
			return UpLevelNeedMoney
		else
			UpLevelNeedMoney = XiuLianDetial[nBookLevel + 1][35 + 2*(nIndex - 12)]
			if UpLevelNeedMoney == nil then
				UpLevelNeedMoney = 0
			end
			return UpLevelNeedMoney
		end
		return 0
	end
	if DataType == "UpLevelNeedExp" then
		local nBookLevel = GetXiuLianMiJiInfo(nIndex - 1,"Level")
		if nBookLevel >= 150 then
			return 0
		end
--		PushDebugMessage("EXP::nIndex "..nIndex.." nBookLevel "..nBookLevel)
		local UpLevelNeedExp = 0
		if nIndex < 12 then
			UpLevelNeedExp = XiuLianDetial[nBookLevel + 1][1 + 3*(nIndex-1)]
			if UpLevelNeedExp == nil then
				UpLevelNeedExp = 0
			end
			return UpLevelNeedExp
		else
			UpLevelNeedExp = XiuLianDetial[nBookLevel + 1][34 + 2*(nIndex - 12)]
			if UpLevelNeedExp == nil then
				UpLevelNeedExp = 0
			end
			return UpLevelNeedExp
		end
		return 0
	end
	if DataType == "XYJ_MIJI_ADD" then
		local nBookLevel = GetXiuLianMiJiInfo(nIndex - 1,"Level")
		if nBookLevel >= 150 then
			return 0
		end
		local MiJiAdd = 0
		MiJiAdd = XiuLianDetial[nBookLevel][3 + 3*(nIndex-1)]
		return MiJiAdd
	end
	if DataType == "XYJ_MIJI_NEXT_ADD" then
		local nBookLevel = GetXiuLianMiJiInfo(nIndex - 1,"Level")
		if nBookLevel >= 150 then
			return 0
		end
		local MiJiAdd = 0
		MiJiAdd = XiuLianDetial[nBookLevel + 1][3 + 3*(nIndex-1)]
		return MiJiAdd
	end
	if DataType == "XYJ_MIJI_FIN_ADD" then
		local nLowXinFaLevel = 150
		for i = 1,6 do
			local theAction = EnumAction(i-1, "xinfa");
			if Player:GetData("MENPAI") ~= 9 then --有门派了
				local nXinfaId = LifeAbility : GetLifeAbility_Number(theAction:GetID());
				local nXinfa_level = Player:GetXinfaInfo(nXinfaId,"level");
				if nLowXinFaLevel > nXinfa_level then
					nLowXinFaLevel = nXinfa_level
				end
			else
				nLowXinFaLevel = 0
			end
		end
		local nMijiAdd = GetXiuLianMiJiInfo(nIndex - 1,"XYJ_MIJI_ADD")
		local FinalImpact = nMijiAdd * (Player:GetData("LEVEL")/100) * (nLowXinFaLevel/100)
		return tonumber(string.format("%.1f", FinalImpact))
	end
end

function GetXiuLianBookInfo(nIndex,DataType)
	local XiuLianBookData = {"#{XYJ_XLBOOK_01}","#{XYJ_XLBOOK_02}","#{XYJ_XLBOOK_03}"}
	nIndex = nIndex + 1
	if DataType == "Level" then--此书下秘籍的最高境界
		--赶工，暂时这样写，以后在优化
		if nIndex == 1 then
			local nMaxJingJie = 0
			for i = 1,5 do
				local tempJingJie = GetXiuLianMiJiInfo(i,"JingJie")
				if tempJingJie > nMaxJingJie then
					nMaxJingJie = tempJingJie
				end
			end
			return nMaxJingJie
		end
		if nIndex == 2 then
			local nMaxJingJie = 0
			for i = 6,11 do
				local tempJingJie = GetXiuLianMiJiInfo(i,"JingJie")
				if tempJingJie > nMaxJingJie then
					nMaxJingJie = tempJingJie
				end
			end
			return nMaxJingJie
		end
		if nIndex == 3 then
			local nMaxJingJie = 0
			for i = 12,15 do
				local tempJingJie = GetXiuLianMiJiInfo(i,"JingJie")
				if tempJingJie > nMaxJingJie then
					nMaxJingJie = tempJingJie
				end
			end
			return nMaxJingJie
		end
		return 1
	end
	if DataType == "HasActived" then
		return 1
	end
	if DataType == "Name" then
		local nIndex_Real = g_Xiulian_Book[nIndex]
		local nName = LuaFnGetItemName(nIndex_Real)
		if nName ~= nil then
			return nName
		else
			return ""
		end
	end
	if DataType == "Explain" then
		local nExplain = XiuLianBookData[nIndex]
		if nExplain ~= nil then
			return nExplain
		else
			return ""
		end
	end
end

function  Xiulian_Skill_Clicked_Update()
	Xiulian_SetSelectState()
    	--刷新中间图标
	if (XIULIAN_MIJI_SELECT ~= -1)   then
		local	theAction = GemCarve:UpdateProductAction(g_Xiulian_MijiBook[XIULIAN_MIJI_SELECT])--EnumAction(XIULIAN_MIJI_SELECT-1, "xiulianmiji")
		Xiulian_SkillIcon : SetActionItem(theAction:GetID())
		local XiuLianMiJiName = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"Name");
		local XiuLianMiJiJingJie = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"JingJie")
		local XiuLianMiJiLevel = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"Level")
		local CurMaxLevel = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"MaxLevel")
		local XiuLianMiJiExplain = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"Explain")
		--add:lby2015修炼下一等级需要的金钱和经验
		local nNeedMoney = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"UpLevelNeedMoney")
		local nNeedExp = GetXiuLianMiJiInfo(XIULIAN_MIJI_SELECT-1,"UpLevelNeedExp")

		local StrJingJie = "#{XL_XML_32}".."#{XL_XML_85}"..XiuLianMiJiJingJie.."#{XL_XML_86}"
		local StrDengJi = "#{XL_XML_33}"..XiuLianMiJiLevel.."/"..CurMaxLevel
		
		
		local StrExp =  "#{XFXL_151203_01}"..nNeedExp
		
		if (XiuLianMiJiLevel == 105	) then
			StrExp ="#{XFXL_151203_01}".. "#{XFXL_151203_04}"
	
		end
		 
		
		Xiulian_SkillName:SetText(XiuLianMiJiName);
		Xiulian_SkillJingjie:SetText(StrJingJie);
		Xiulian_SkillLevel:SetText(StrDengJi);
		
		--Xiulian_LearnExp:SetText(StrExp);
		--Xiulian_LearnDemand_Jiaozi:Show()
		----Xiulian_LearnDemand_Jiaozi_Text:SetText("#{XFXL_151203_02}")
		
		if (XiuLianMiJiLevel == 105	) then
			--Xiulian_LearnDemand_Jiaozi:Hide()
			----Xiulian_LearnDemand_Jiaozi_Text:SetText("#{XFXL_151203_02}".."#{XFXL_151203_04}")
		else
			--Xiulian_LearnDemand_Jiaozi:Show()
			--Xiulian_LearnDemand_Jiaozi:SetProperty("MoneyNumber", tostring(nNeedMoney))
			----Xiulian_LearnDemand_Jiaozi_Text:SetText("#{XFXL_151203_02}")
		end
		
		local strCondition = ""
		if(XIULIAN_BOOK_SELECT == 1) then
			if(Player:GetData("LEVEL") >= 70) then
				strCondition = "\n#G#{XL_XML_30}"
			else
				strCondition = "\n#cff0000#{XL_XML_30}"
			end
		elseif XIULIAN_BOOK_SELECT == 2 then
			local XiuLianBook1Level = GetXiuLianBookInfo(0,"Level")
			if (XiuLianBook1Level >= 3) then
				strCondition = "\n#G#{XL_XML_34}"
			else
				strCondition = "\n#cff0000#{XL_XML_34}"
			end
		--开启第3本修炼
		elseif XIULIAN_BOOK_SELECT == 3 then
	        if XIULIAN_MIJI_SELECT-1 == 11 then
	            --等级限制
				if(Player:GetData("LEVEL") >= 90) then
					strCondition = "\n#{XLZY_120330_12}"
				else
					strCondition = "\n#{XLZY_120330_01}"
				end
				--完成进阶任务
				if GetXiuLianBookInfo(2,"HasActived") == 1 then
					strCondition = strCondition.."\n#{XLZY_120330_23}"
				else
					strCondition = strCondition.."\n#{XLZY_120330_22}"
				end

				--门派信息
				local nZhiye = Player:GetData("MEMPAI")
				nZhiye = nZhiye + 1
				if nZhiye >= 1 and nZhiye <= 12 then
					strCondition = strCondition..strZhiyeTip[nZhiye]
				end

			elseif  XIULIAN_MIJI_SELECT-1 == 12 then
				local level = GetXiuLianMiJiInfo(11,"Level")
				if tonumber(level) >= 10 then
					strCondition = "\n#{XLZY_120330_14}"
				else
					strCondition = "\n#{XLZY_120330_13}"
				end
	        elseif  XIULIAN_MIJI_SELECT-1 == 13 or XIULIAN_MIJI_SELECT-1 == 14 then
	            local level_11 = GetXiuLianMiJiInfo(11,"Level")
	            local level_12 = GetXiuLianMiJiInfo(12,"Level")
	            if tonumber(level_11) >= 20 and tonumber(level_12) >= 20 then
					strCondition = "\n#{XLZY_120330_16}"
				else
					strCondition = "\n#{XLZY_120330_15}"
				end
	        end
		end
		Xiulian_SkillInfo:SetText(XiuLianMiJiExplain.."\n#{XL_XML_31}"..strCondition);

	else
		if(XIULIAN_BOOK_SELECT == -1)	then
			Xiulian_SkillIcon : SetActionItem(-1)
		end
	end
end

--===============================================
-- 选择修炼境界后刷新
--===============================================
function  Xiulian_JingJie_Selected_Update()
    if XIULIAN_BOOK_SELECT >= 3 then
	    return
	end
    if XIULIAN_BOOK_SELECT == 1  then
		for i = 1, 5 do
			local theAction = GemCarve:UpdateProductAction(g_Xiulian_MijiBook[i])--EnumAction(i - 1, "xiulianmiji")
			if theAction ~= 0 then
				XIULIAN_MIJI[i] : SetActionItem(theAction:GetID())
				local CurMaxLevel  = GetXiuLianMiJiInfo(i - 1,"MaxLevel")
				local XiuLianMiJiLevel = GetXiuLianMiJiInfo(i - 1,"Level")
				if (CurMaxLevel == nil) or (XiuLianMiJiLevel == nil) then
					MIJI_CAN_SELECT =false
					return
				else
					MIJI_CAN_SELECT =true
				end
				XIULIAN_MIJI_TEXT[i]:SetText(XiuLianMiJiLevel.."/"..CurMaxLevel);
			end
		end
		XIULIAN_MIJI[6] : SetActionItem(-1)
		XIULIAN_MIJI_TEXT[6]:SetText("");
	elseif XIULIAN_BOOK_SELECT == 2  then
	    for i = 1, 6 do
			local theAction = GemCarve:UpdateProductAction(g_Xiulian_MijiBook[i + 5])--EnumAction(i + 5 - 1, "xiulianmiji")
			if theAction ~= 0 then
		        XIULIAN_MIJI[i] : SetActionItem(theAction:GetID())
		        local CurMaxLevel = GetXiuLianMiJiInfo(i + 5 - 1,"MaxLevel")
		        local XiuLianMiJiLevel = GetXiuLianMiJiInfo(i + 5 - 1,"Level")
		        if (CurMaxLevel == nil) or (XiuLianMiJiLevel == nil) then
		        	MIJI_CAN_SELECT =false
					return
		        else
		        	MIJI_CAN_SELECT =true
				end
		        XIULIAN_MIJI_TEXT[i]:SetText(XiuLianMiJiLevel.."/"..CurMaxLevel);
			end
		end
	--add by kaibin for 第3本修炼
	elseif XIULIAN_BOOK_SELECT == 3 then
		for i = 1, 4 do
			local theAction = GemCarve:UpdateProductAction(g_Xiulian_MijiBook[i + 11])--EnumAction(i + 11 - 1, "xiulianmiji")
			if theAction ~= 0 then
		        XIULIAN_MIJI[i] : SetActionItem(theAction:GetID())
		        local CurMaxLevel = GetXiuLianMiJiInfo(i + 11 - 1,"MaxLevel")
		        local XiuLianMiJiLevel = GetXiuLianMiJiInfo(i + 11 - 1,"Level")
		        if (CurMaxLevel == nil) or (XiuLianMiJiLevel == nil) then
		        	MIJI_CAN_SELECT =false
					return
		        else
		        	MIJI_CAN_SELECT =true
				end
		        XIULIAN_MIJI_TEXT[i]:SetText(XiuLianMiJiLevel.."/"..CurMaxLevel);
			end
		end
		XIULIAN_MIJI[5] : SetActionItem(-1)
		XIULIAN_MIJI_TEXT[5]:SetText("");
		XIULIAN_MIJI[6] : SetActionItem(-1)
		XIULIAN_MIJI_TEXT[6]:SetText("");
	--end by kaibin for 第3本修炼
	else
		for i=1, 6 do
	        XIULIAN_MIJI[i] : SetActionItem(-1)
	        XIULIAN_MIJI_TEXT[i]:SetText("")
		end
	end
	Xiulian_SetSelectState()
    	--刷新中间图标
	if (XIULIAN_BOOK_SELECT ~= -1)   then
		local theAction = GemCarve:UpdateProductAction(g_Xiulian_Book[XIULIAN_BOOK_SELECT])--EnumAction(XIULIAN_BOOK_SELECT-1, "xiulianbook")
		Xiulian_SkillIcon : SetActionItem(theAction:GetID())
		local XiuLianBookName = GetXiuLianBookInfo(XIULIAN_BOOK_SELECT-1,"Name");
		local XiuLianBookLevel = GetXiuLianBookInfo(XIULIAN_BOOK_SELECT-1,"Level")
		local XiuLianBookExplain = GetXiuLianBookInfo(XIULIAN_BOOK_SELECT-1,"Explain")


		local StrJingJie = "#{XL_XML_29}".."#{XL_XML_85}"..XiuLianBookLevel.."#{XL_XML_86}"

		Xiulian_SkillName:SetText(XiuLianBookName);
		Xiulian_SkillJingjie:SetText(StrJingJie);
		Xiulian_SkillLevel:SetText("");
		-- ----Xiulian_LearnDemand_Jiaozi_Text:SetText("")
		--add:lby 2015初始化金钱和经验的初始值
	
		-- --Xiulian_LearnExp:SetText("");
		--Xiulian_LearnDemand_Jiaozi:Hide()
		
		
		local strCondition = ""
		if(XIULIAN_BOOK_SELECT == 1) then
			if(Player:GetData("LEVEL") >= 70) then
				strCondition = "\n#G#{XL_XML_30}"
			else
				strCondition = "\n#cff0000#{XL_XML_30}"
			end
		elseif XIULIAN_BOOK_SELECT == 2 then
			local XiuLianBook1Level = GetXiuLianBookInfo(0,"Level")
			if (XiuLianBook1Level >= 3) then
				strCondition = "\n#G#{XL_XML_34}"
			else
				strCondition = "\n#cff0000#{XL_XML_34}"
			end
		--开启第3第4本修炼
		elseif XIULIAN_BOOK_SELECT == 3 then
			----------------------------------------------------此处需要判断是否完成门派进阶
			--等级限制
			if(Player:GetData("LEVEL") >= 90) then
				strCondition = "\n#{XLZY_120330_12}"
			else
				strCondition = "\n#{XLZY_120330_01}"
			end
			--完成进阶任务
			if GetXiuLianBookInfo(2,"HasActived") == 1 then
			    strCondition = strCondition.."\n#{XLZY_120330_23}"
			else
				strCondition = strCondition.."\n#{XLZY_120330_22}"
			end

			--门派信息
			local nZhiye = Player:GetData("MEMPAI")
			nZhiye = nZhiye + 1
			--PushDebugMessage(tostring(nZhiye))
			if nZhiye >= 1 and nZhiye <= 12 then
				strCondition = strCondition..strZhiyeTip[nZhiye]
			end

		end
		Xiulian_SkillInfo:SetText(XiuLianBookExplain.."\n#{XL_XML_31}"..strCondition);
	else
	    Xiulian_SkillIcon : SetActionItem(-1)
	end

end
--===============================================
-- 设置选中状态
--===============================================
function Xiulian_SetSelectState()

  	for i=1, 3 do
  	  if(i == XIULIAN_BOOK_SELECT) then
  	       XIULIAN_BOOKS[i]:SetPushed(1)
  	  else
  	       XIULIAN_BOOKS[i]:SetPushed(0)
  	  end
	end
	for i=1, 6 do
		if((XIULIAN_MIJI_SELECT <= 5 and i==XIULIAN_MIJI_SELECT) or
		   (XIULIAN_MIJI_SELECT > 5 and XIULIAN_MIJI_SELECT <= 11 and i == XIULIAN_MIJI_SELECT - 5) or
		   (XIULIAN_MIJI_SELECT > 11 and XIULIAN_MIJI_SELECT <= 15 and i == XIULIAN_MIJI_SELECT - 11)) then
		    XIULIAN_MIJI[i]:SetPushed(1);
		else
			XIULIAN_MIJI[i]:SetPushed(0);
		end
	end
end

--================================================
-- 恢复界面的默认相对位置
--================================================
function Xiulian_Frame_On_ResetPos()

	Xiulian_Frame : SetProperty("UnifiedXPosition", g_Xiulian_Frame_UnifiedXPosition);
	Xiulian_Frame : SetProperty("UnifiedYPosition", g_Xiulian_Frame_UnifiedYPosition);

end

function Xiulian_ZhenYuan_Page_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenZhenYuanLayout()
end

function Xiulian_Miji_Page_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenMijiLayout()
end

function Xiulian_OpenBaoJian()
	local nLevel =Player:GetData("LEVEL")
	if nLevel < 85 then
		PushDebugMessage("#{ZZZB_150811_114}")
		return
	end

	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1)
	OpenBaoJianLayout()
end

function Xiulian_JueWei_Page_Switch()
	-- 等级限制
	if ( Player:GetData("LEVEL") < 85 ) then
		PushDebugMessage( "#{JXJW_140822_20}" );
		return
	end
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenJunXianPage();
	this:Hide();
end

function Xiulian_Refresh_Page_Button( nLevel)
	--武魂
	if ( nLevel < 65 ) then
		Xiulian_Wuhun:Disable()
		-- Xiulian_Wuhun_tips:Show()
		--Xiulian_Wuhun:SetToolTip("#cfff263等级达到#G65级#cfff263后可开启此界面。")
	else
		Xiulian_Wuhun:Enable()
		-- Xiulian_Wuhun_tips:Hide()
	end
	--修炼
	if ( nLevel < 70 ) then
		Xiulian_Xiulian:Disable()
		-- Xiulian_Xiulian_tips:Show()
	else
		Xiulian_Xiulian:Enable()
		-- Xiulian_Xiulian_tips:Hide()
	end
end
function Xiulian_Infant_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	OpenInfantLayout()
	this:Hide();
end

function Xiulian_Talent_Switch()
	Variable:SetVariable("SelfUnionPos", Xiulian_Frame:GetProperty("UnifiedPosition"), 1);
	ToggleTalentPage();
	this:Hide();
end